
import numpy as np
import math

def FullModel_MN( P , V ):

    r4 = 0.295 ; d2 = 0.075 ; d3 = 0.27 ; d4 = 0.09 ; g = -9.81   #MDH參數

    Beta = np.array([
             4.656064,
             15.511367,
             29.088500,
             -1.616284,
             -0.175235,
             0.294588,
             -0.190091,
             2.886740,
             4.559449,
             0.086426,
             8.934212,
             8.894641,
             0.280786,
             0.054070,
             0.028135,
             0.151076,
             0.156232,
             0.951755,
             -1.506022,
             1.776229,
             4.741310,
             8.202105,
             -0.020699,
             -0.031405,
             0.025674,
             0.170089,
             0.025696,
             0.077604,
             -0.013946,
             0.551053,
             8.695115,
             8.315412,
             -0.056325,
             0.022141,
             -0.020779,
             0.023400,
             0.041744,
             0.023138,
             -0.157302,
             0.038919,
             2.583182,
             1.137372,
             -0.004276,
             0.000514,
             -0.002595,
             0.001055,
             -0.007077,
             -0.002433,
             -0.001694,
             0.040099,
             0.709229,
             0.398608  ])

    #print(type(P))

    M =np.array ([
        [Beta[0] + Beta[3]*math.cos(P[1])**2 - math.sin(2*P[1])*Beta[4] - 2*d2*Beta[9]*math.cos(P[1]) + Beta[12]*math.cos(P[1])**2*math.cos(P[2])**2 - 2*d2*Beta[8]*math.sin(P[1]) + Beta[26]*math.cos(P[1])**2*math.sin(P[2])**2 + Beta[26]*math.cos(P[2])**2*math.sin(P[1])**2 + Beta[12]*math.sin(P[1])**2*math.sin(P[2])**2 + Beta[36]*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3])**2 - 2*Beta[13]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1]) - 2*Beta[13]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2]) + 2*Beta[13]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2 + 2*Beta[13]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2]) - 2*d2*Beta[18]*math.cos(P[1])*math.cos(P[2]) - 2*d2*Beta[17]*math.cos(P[1])*math.sin(P[2]) - 2*d2*Beta[17]*math.cos(P[2])*math.sin(P[1]) + 2*d2*Beta[18]*math.sin(P[1])*math.sin(P[2]) + Beta[22]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])**2 + 2*d3*Beta[17]*math.cos(P[2])*math.sin(P[1])**2 + Beta[36]*math.cos((P[1]))**2*math.cos(P[2])**2*math.sin(P[3])**2 + Beta[46]*math.cos(P[1])**2*math.cos(P[4])**2*math.sin(P[2])**2 + Beta[46]*math.cos(P[2])**2*math.cos(P[4])**2*math.sin(P[1])**2 - 2*d3*Beta[18]*math.sin(P[1])**2*math.sin(P[2]) + Beta[22]*math.cos(P[3])**2*math.sin(P[1])**2*math.sin(P[2])**2 + Beta[32]*math.cos(P[1])**2*math.sin(P[2])**2*math.sin(P[4])**2 + Beta[32]*math.cos(P[2])**2*math.sin(P[1])**2*math.sin(P[4])**2 - 2*r4*Beta[38]*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])**2 + Beta[32]*math.cos(P[3])**2*math.cos(P[4])**2*math.sin(P[1])**2*math.sin(P[2])**2 + Beta[42]*math.cos(P[1])**2*math.cos(P[2])**2*math.sin(P[3])**2*math.sin(P[5])**2 + Beta[42]*math.cos(P[1])**2*math.cos(P[5])**2*math.sin(P[2])**2*math.sin(P[4])**2 + Beta[42]*math.cos(P[2])**2*math.cos(P[5])**2*math.sin(P[1])**2*math.sin(P[4])**2 - 2*r4*Beta[37]*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[4]) + Beta[46]*math.cos(P[3])**2*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[4])**2 - 2*d2*Beta[38]*math.cos(P[1])*math.cos(P[2])*math.cos(P[4]) + Beta[42]*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3])**2*math.sin(P[5])**2 + 2*d3*Beta[18]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1]) - 2*d2*Beta[27]*math.cos(P[1])*math.cos(P[3])*math.sin(P[2]) - 2*d2*Beta[27]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1]) - 2*d2*Beta[37]*math.cos(P[1])*math.cos(P[2])*math.sin(P[4]) - 2*Beta[23]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[3]) + 2*d3*Beta[17]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2]) + 2*d2*Beta[28]*math.cos(P[1])*math.sin(P[2])*math.sin(P[3]) + 2*d2*Beta[28]*math.cos(P[2])*math.sin(P[1])*math.sin(P[3]) + 2*d2*Beta[38]*math.cos(P[4])*math.sin(P[1])*math.sin(P[2]) + 2*Beta[33]*math.cos(P[1])**2*math.cos(P[4])*math.sin(P[2])**2*math.sin(P[4]) + 2*Beta[33]*math.cos(P[2])**2*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[4]) + 2*d2*Beta[37]*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) - 2*Beta[23]*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3]) - 2*Beta[12]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2]) + 2*Beta[26]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2]) + 2*d3*Beta[27]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])**2 - 2*d3*Beta[28]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[3]) - 2*d3*Beta[38]*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2]) - 2*d3*Beta[37]*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4]) + 2*Beta[24]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[1]) + 2*Beta[24]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.sin(P[2]) - 2*r4*Beta[38]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[4]) + Beta[32]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])**2*math.cos(P[4])**2 - 2*Beta[24]*math.cos(P[1])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])**2 - 2*Beta[24]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[2]) - 2*Beta[25]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1])*math.sin(P[3]) - 2*Beta[25]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2])*math.sin(P[3]) + 2*d4*Beta[27]*math.cos(P[1])**2*math.cos(P[3])*math.sin(P[2])**2 + 2*d4*Beta[27]*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[1])**2 - 2*r4*Beta[37]*math.cos(P[1])**2*math.cos(P[2])**2*math.sin(P[4]) + Beta[46]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])**2*math.sin(P[4])**2 + 2*Beta[25]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3]) + 2*Beta[25]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3]) - 2*d4*Beta[28]*math.cos(P[1])**2*math.sin(P[2])**2*math.sin(P[3]) - 2*d4*Beta[28]*math.cos(P[2])**2*math.sin(P[1])**2*math.sin(P[3]) + Beta[42]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])**2*math.cos(P[4])**2*math.cos(P[5])**2 + 2*Beta[33]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])**2*math.sin(P[1])*math.sin(P[2])**2 + 2*Beta[33]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[1])*math.sin(P[4])**2 + 2*Beta[33]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])**2*math.sin(P[1])**2*math.sin(P[2]) + 2*Beta[33]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.sin(P[2])*math.sin(P[4])**2 + 2*Beta[35]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[3])*math.sin(P[4]) - 2*Beta[44]*math.cos(P[1])**2*math.cos(P[4])*math.cos(P[5])*math.sin(P[2])**2*math.sin(P[4]) - 2*Beta[44]*math.cos(P[2])**2*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[4]) - 2*d3*Beta[28]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3]) + 2*d2*Beta[47]*math.cos(P[1])*math.sin(P[2])*math.sin(P[3])*math.sin(P[5]) + 2*d2*Beta[47]*math.cos(P[2])*math.sin(P[1])*math.sin(P[3])*math.sin(P[5]) + 2*d2*Beta[47]*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) - 2*Beta[33]*math.cos(P[1])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4])**2 - 2*Beta[33]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4])**2 - 2*Beta[34]*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3]) + Beta[43]*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3]) + 2*Beta[45]*math.cos(P[1])**2*math.cos(P[4])*math.sin(P[2])**2*math.sin(P[4])*math.sin(P[5]) + 2*Beta[45]*math.cos(P[2])**2*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[4])*math.sin(P[5]) - 2*d2*Beta[48]*math.sin(P[1])*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) + Beta[42]*math.cos(P[3])**2*math.cos(P[4])**2*math.cos(P[5])**2*math.sin(P[1])**2*math.sin(P[2])**2 + 2*Beta[35]*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[4]) + 2*d3*Beta[37]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2 + 2*d4*Beta[38]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[4])*math.sin(P[1]) + 2*d4*Beta[38]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[4])*math.sin(P[2]) - 2*r4*Beta[27]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[1]) - 2*r4*Beta[27]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.sin(P[2]) - 2*Beta[33]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])**2*math.cos(P[4])*math.sin(P[4]) + 2*d4*Beta[37]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1])*math.sin(P[4]) + 2*d4*Beta[37]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2])*math.sin(P[4]) - 2*d4*Beta[38]*math.cos(P[1])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])**2 - 2*d3*Beta[38]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[4]) - 2*d4*Beta[38]*math.cos(P[2])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2]) - 2*d3*Beta[48]*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[3]) + 2*r4*Beta[27]*math.cos(P[1])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])**2 + 2*r4*Beta[27]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[2]) + 2*r4*Beta[28]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1])*math.sin(P[3]) + 2*r4*Beta[28]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2])*math.sin(P[3]) + 2*Beta[43]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[5])*math.sin(P[3])**2*math.sin(P[5]) - 2*d4*Beta[37]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4]) - 2*d4*Beta[37]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4]) - 2*d3*Beta[47]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[3])*math.sin(P[5]) - 2*d3*Beta[47]*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4]) - 2*r4*Beta[28]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3]) - 2*r4*Beta[28]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3]) - 2*Beta[33]*math.cos(P[3])**2*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[4]) - 2*Beta[43]*math.cos(P[1])**2*math.cos(P[5])*math.sin(P[2])**2*math.sin(P[4])**2*math.sin(P[5]) - 2*Beta[43]*math.cos(P[2])**2*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[4])**2*math.sin(P[5]) + 2*d3*Beta[48]*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) + 2*Beta[43]*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3])**2*math.sin(P[5]) - 2*Beta[22]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])**2*math.sin(P[1])*math.sin(P[2]) + 2*Beta[35]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[4])*math.sin(P[1])*math.sin(P[3]) + 2*Beta[35]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[4])*math.sin(P[2])*math.sin(P[3]) + 2*Beta[46]*math.cos(P[1])*math.cos(P[2])*math.cos(P[4])**2*math.sin(P[1])*math.sin(P[2]) + 2*d4*Beta[37]*math.cos(P[1])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[2])**2 + 2*d4*Beta[37]*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2 - 2*r4*Beta[47]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[5])*math.sin(P[4]) + 2*Beta[32]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4])**2 + 2*Beta[34]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1])*math.sin(P[3])*math.sin(P[4]) - 2*Beta[36]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])**2 + 2*Beta[34]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2])*math.sin(P[3])*math.sin(P[4]) - 2*Beta[35]*math.cos(P[1])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3]) - 2*Beta[35]*math.cos(P[2])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3]) - Beta[43]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1])*math.sin(P[3])*math.sin(P[4]) - Beta[43]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2])*math.sin(P[3])*math.sin(P[4]) - 2*d4*Beta[38]*math.cos(P[1])**2*math.cos(P[3])*math.sin(P[2])**2*math.sin(P[4]) - 2*d4*Beta[38]*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[4]) - 2*d4*Beta[48]*math.cos(P[1])**2*math.cos(P[5])*math.sin(P[2])**2*math.sin(P[3]) - 2*d4*Beta[48]*math.cos(P[2])**2*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[3]) + 2*r4*Beta[48]*math.cos(P[1])**2*math.cos(P[2])**2*math.sin(P[4])*math.sin(P[5]) - 2*Beta[34]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[4]) - 2*Beta[34]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3])*math.sin(P[4]) + Beta[43]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[4]) + Beta[43]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3])*math.sin(P[4]) - 2*d4*Beta[47]*math.cos(P[1])**2*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[5]) - 2*d4*Beta[47]*math.cos(P[2])**2*math.sin(P[1])**2*math.sin(P[3])*math.sin(P[5]) - 2*r4*Beta[47]*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[4]) + 2*r4*Beta[48]*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[4])*math.sin(P[5]) - 2*d2*Beta[37]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.sin(P[2]) - 2*d2*Beta[37]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1]) + 2*d3*Beta[38]*math.cos(P[1])*math.cos(P[2])*math.cos(P[4])*math.sin(P[1]) - 2*d2*Beta[47]*math.cos(P[1])*math.cos(P[2])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[33]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])**2*math.sin(P[1]) - 2*Beta[33]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])**2*math.sin(P[2]) - 2*Beta[34]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[3]) + Beta[43]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[3]) + 2*d3*Beta[27]*math.cos(P[1])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2]) + 2*d3*Beta[37]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[4]) + 2*d2*Beta[38]*math.cos(P[1])*math.cos(P[3])*math.sin(P[2])*math.sin(P[4]) + 2*d2*Beta[38]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])*math.sin(P[4]) + 2*d2*Beta[48]*math.cos(P[1])*math.cos(P[5])*math.sin(P[2])*math.sin(P[3]) + 2*d2*Beta[48]*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])*math.sin(P[3]) + 2*d2*Beta[48]*math.cos(P[1])*math.cos(P[2])*math.sin(P[4])*math.sin(P[5]) - 2*r4*Beta[37]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[1]) - 2*r4*Beta[37]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[2]) - 3*Beta[43]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[3]) + 2*Beta[44]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])**2*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) + 4*Beta[23]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3]) + 4*Beta[33]*math.cos(P[1])*math.cos(P[2])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) + 2*d4*Beta[47]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[5])*math.sin(P[1])*math.sin(P[4]) + 2*d4*Beta[47]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[5])*math.sin(P[2])*math.sin(P[4]) - 2*d3*Beta[48]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[5]) + 2*r4*Beta[37]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])**2 + 2*r4*Beta[37]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2]) + 2*r4*Beta[38]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[1])*math.sin(P[4]) + 2*r4*Beta[38]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.sin(P[2])*math.sin(P[4]) + 2*r4*Beta[48]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[5])*math.sin(P[1])*math.sin(P[3]) + 2*r4*Beta[48]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[5])*math.sin(P[2])*math.sin(P[3]) + Beta[43]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[3])*math.sin(P[5])**2 - 2*Beta[45]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])**2*math.cos(P[4])*math.sin(P[4])*math.sin(P[5]) - 2*d4*Beta[47]*math.cos(P[1])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4]) - 2*d4*Beta[47]*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4]) - 2*d4*Beta[48]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1])*math.sin(P[4])*math.sin(P[5]) - 2*d4*Beta[48]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) - 2*r4*Beta[38]*math.cos(P[1])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4]) - 2*r4*Beta[38]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4]) + 2*r4*Beta[47]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1])*math.sin(P[3])*math.sin(P[5]) + 2*r4*Beta[47]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2])*math.sin(P[3])*math.sin(P[5]) - 2*r4*Beta[48]*math.cos(P[1])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3]) - 2*r4*Beta[48]*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3]) - 3*Beta[43]*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3]) + 2*Beta[44]*math.cos(P[3])**2*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[4]) + 2*d4*Beta[48]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4])*math.sin(P[5]) + 2*d4*Beta[48]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) - 2*r4*Beta[47]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[5]) - 2*r4*Beta[47]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3])*math.sin(P[5]) + Beta[43]*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[5])**2 - 2*Beta[45]*math.cos(P[3])**2*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[4])*math.sin(P[5]) - 2*Beta[32]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[4]) - 2*Beta[32]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[2])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[3]) + 2*Beta[46]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[4])*math.cos(P[5])*math.sin(P[2])*math.sin(P[3]) + 2*Beta[46]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[2])*math.sin(P[4]) + 2*d4*Beta[47]*math.cos(P[1])**2*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[2])**2 + 2*d4*Beta[47]*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])**2 - 2*Beta[43]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])**2*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[32]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4]) + 2*Beta[32]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4]) - 2*Beta[44]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[4])*math.sin(P[1])*math.sin(P[3])*math.sin(P[5]) - 2*Beta[44]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[4])*math.sin(P[2])*math.sin(P[3])*math.sin(P[5]) + 2*Beta[45]*math.cos(P[1])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3]) - 2*Beta[46]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4]) + 2*Beta[45]*math.cos(P[2])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3]) - 2*Beta[46]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4]) - 2*d4*Beta[48]*math.cos(P[1])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[2])**2*math.sin(P[5]) - 2*d4*Beta[48]*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[5]) + 2*Beta[44]*math.cos(P[1])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[2])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3])*math.sin(P[5]) - 2*Beta[43]*math.cos(P[3])**2*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[5]) - 2*d2*Beta[47]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[2]) - 2*d2*Beta[47]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1]) + 2*Beta[44]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[1]) + 2*Beta[44]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[2]) + 4*d4*Beta[27]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2]) + 2*d3*Beta[37]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2]) + 2*d3*Beta[47]*math.cos(P[1])*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])*math.sin(P[4]) + 2*d2*Beta[48]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.sin(P[2])*math.sin(P[5]) + 2*d2*Beta[48]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[5]) + 4*r4*Beta[38]*math.cos(P[1])*math.cos(P[2])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2]) - 2*Beta[32]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])**2*math.cos(P[4])**2*math.sin(P[1])*math.sin(P[2]) - 2*Beta[44]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])**2 - 2*Beta[44]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[5])*math.sin(P[1])*math.sin(P[4])**2 - 2*Beta[44]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2]) - 2*Beta[44]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[5])*math.sin(P[2])*math.sin(P[4])**2 - 2*Beta[45]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])**2*math.sin(P[1])*math.sin(P[5]) - 2*Beta[45]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])**2*math.sin(P[2])*math.sin(P[5]) - 2*Beta[45]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[5])*math.sin(P[3])*math.sin(P[4]) - 4*d4*Beta[28]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3]) - 2*d3*Beta[38]*math.cos(P[1])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) - 2*d3*Beta[48]*math.cos(P[1])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3]) - 2*d3*Beta[48]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[4])*math.sin(P[5]) + 4*r4*Beta[37]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) + 2*Beta[42]*math.cos(P[1])*math.cos(P[2])*math.cos(P[5])**2*math.sin(P[1])*math.sin(P[2])*math.sin(P[4])**2 + 3*Beta[43]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[5])**2*math.sin(P[1])*math.sin(P[3])*math.sin(P[4]) - 2*Beta[46]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])**2*math.sin(P[1])*math.sin(P[2])*math.sin(P[4])**2 + 3*Beta[43]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[5])**2*math.sin(P[2])*math.sin(P[3])*math.sin(P[4]) + 2*Beta[44]*math.cos(P[1])*math.cos(P[3])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4])**2 + 2*Beta[44]*math.cos(P[2])*math.cos(P[3])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4])**2 + 2*Beta[45]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])**2*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[5]) + 2*Beta[45]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[1])*math.sin(P[4])**2*math.sin(P[5]) - 2*Beta[44]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.sin(P[3])*math.sin(P[4])*math.sin(P[5]) + 2*Beta[45]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])**2*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[5]) + 2*Beta[45]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.sin(P[2])*math.sin(P[4])**2*math.sin(P[5]) - 2*d3*Beta[47]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])*math.sin(P[5]) - 2*Beta[42]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])**2*math.sin(P[5])**2 - Beta[43]*math.cos(P[1])*math.cos(P[2])**2*math.sin(P[1])*math.sin(P[3])*math.sin(P[4])*math.sin(P[5])**2 - 3*Beta[43]*math.cos(P[1])*math.cos(P[5])**2*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[4]) - 3*Beta[43]*math.cos(P[2])*math.cos(P[5])**2*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3])*math.sin(P[4]) - Beta[43]*math.cos(P[1])**2*math.cos(P[2])*math.sin(P[2])*math.sin(P[3])*math.sin(P[4])*math.sin(P[5])**2 - 2*Beta[45]*math.cos(P[1])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4])**2*math.sin(P[5]) - 2*Beta[45]*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4])**2*math.sin(P[5]) - 2*Beta[45]*math.cos(P[3])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[4]) + Beta[43]*math.cos(P[1])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[4])*math.sin(P[5])**2 + Beta[43]*math.cos(P[2])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3])*math.sin(P[4])*math.sin(P[5])**2 - 2*Beta[44]*math.cos(P[3])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[4])*math.sin(P[5]) + 2*d3*Beta[47]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])**2 + 4*Beta[33]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])**2*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) - 4*Beta[43]*math.cos(P[1])*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])**2*math.sin(P[5]) + 2*Beta[42]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[5])*math.sin(P[1])*math.sin(P[3])*math.sin(P[4])*math.sin(P[5]) - 4*Beta[43]*math.cos(P[1])*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4])**2*math.sin(P[5]) + 2*Beta[42]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[5])*math.sin(P[2])*math.sin(P[3])*math.sin(P[4])*math.sin(P[5]) - 2*Beta[42]*math.cos(P[1])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[4])*math.sin(P[5]) - 2*Beta[42]*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[3])*math.sin(P[4])*math.sin(P[5]) + 4*d4*Beta[37]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2]) + 2*d3*Beta[47]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2]) - 2*Beta[42]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[1])*math.sin(P[4]) - 2*Beta[42]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[2])*math.sin(P[4]) - 2*Beta[42]*math.cos(P[1])**2*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[3])*math.sin(P[5]) - 4*d4*Beta[38]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) - 4*d4*Beta[48]*math.cos(P[1])*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3]) - 2*d3*Beta[48]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[5]) + 4*r4*Beta[47]*math.cos(P[1])*math.cos(P[2])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) + 2*Beta[42]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4]) + 2*Beta[42]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4]) - 4*d4*Beta[47]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])*math.sin(P[5]) - 4*r4*Beta[48]*math.cos(P[1])*math.cos(P[2])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) - 2*Beta[42]*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])**2*math.sin(P[3])*math.sin(P[5]) - 2*r4*Beta[47]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1]) - 2*r4*Beta[47]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[2]) + 4*Beta[34]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3]) - 2*Beta[43]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3]) - 4*Beta[44]*math.cos(P[1])*math.cos(P[2])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) + 2*r4*Beta[47]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])**2 + 2*r4*Beta[47]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2]) + 2*r4*Beta[48]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[5]) + 2*r4*Beta[48]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[2])*math.sin(P[5]) - 2*Beta[42]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])**2*math.cos(P[4])**2*math.cos(P[5])**2*math.sin(P[1])*math.sin(P[2]) - 4*Beta[35]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])*math.sin(P[4]) + 4*Beta[45]*math.cos(P[1])*math.cos(P[2])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) - 2*r4*Beta[48]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[5]) - 2*r4*Beta[48]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[5]) + 4*d4*Beta[47]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2]) - 4*d4*Beta[48]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[5]) + 4*Beta[43]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])**2*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[5]) + 4*Beta[45]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])*math.sin(P[4]) + 4*Beta[44]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])*math.sin(P[4])*math.sin(P[5]) + 6*Beta[43]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[1])*math.sin(P[2])*math.sin(P[3]) - 4*Beta[44]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])**2*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4]) + 4*Beta[43]*math.cos(P[1])*math.cos(P[2])**2*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[4])*math.sin(P[5]) + 4*Beta[43]*math.cos(P[1])**2*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) - 2*Beta[43]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])*math.sin(P[5])**2 + 4*Beta[45]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])**2*math.cos(P[4])*math.sin(P[1])*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) - 4*Beta[43]*math.cos(P[1])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])**2*math.sin(P[4])*math.sin(P[5]) - 4*Beta[43]*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])**2*math.sin(P[2])*math.sin(P[4])*math.sin(P[5]) + 4*Beta[42]*math.cos(P[1])*math.cos(P[2])*math.cos(P[3])*math.cos(P[4])*math.cos(P[5])*math.sin(P[1])*math.sin(P[2])*math.sin(P[3])*math.sin(P[5]), math.cos(P[1])*(Beta[5] - d3*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[2])*(Beta[15] + r4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[3])*(Beta[24] + Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]) - 2*Beta[33]*math.cos(P[4])**2 - (math.sin(2*P[4])*Beta[32])/2 + (math.sin(2*P[4])*Beta[46])/2 + 2*Beta[44]*math.cos(P[4])**2*math.cos(P[5]) - 2*Beta[45]*math.cos(P[4])**2*math.sin(P[5]) - Beta[42]*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[4]) + 2*Beta[43]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4])*math.sin(P[5])) - math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) + math.cos(P[2])*(Beta[14] + math.sin(P[3])*(math.cos(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) - math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - d4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.cos(P[3])*(math.sin(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) - math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))))) - math.sin(P[1])*(Beta[6] + math.sin(P[2])*(Beta[14] + math.sin(P[3])*(math.cos(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) - math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - d4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.cos(P[3])*(math.sin(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) - math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))))) + math.cos(P[2])*(Beta[15] + r4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[3])*(Beta[24] + Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]) - 2*Beta[33]*math.cos(P[4])**2 - (math.sin(2*P[4])*Beta[32])/2 + (math.sin(2*P[4])*Beta[46])/2 + 2*Beta[44]*math.cos(P[4])**2*math.cos(P[5]) - 2*Beta[45]*math.cos(P[4])**2*math.sin(P[5]) - Beta[42]*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[4]) + 2*Beta[43]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4])*math.sin(P[5])) - math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))))), - math.cos(P[1])*(math.sin(P[2])*(Beta[15] + r4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[3])*(Beta[24] + Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]) - 2*Beta[33]*math.cos(P[4])**2 - (math.sin(2*P[4])*Beta[32])/2 + (math.sin(2*P[4])*Beta[46])/2 + 2*Beta[44]*math.cos(P[4])**2*math.cos(P[5]) - 2*Beta[45]*math.cos(P[4])**2*math.sin(P[5]) - Beta[42]*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[4]) + 2*Beta[43]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4])*math.sin(P[5])) - math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - math.cos(P[2])*(Beta[14] + math.sin(P[3])*(math.cos(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) - math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - d4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.cos(P[3])*(math.sin(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) - math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))))) - math.sin(P[1])*(math.sin(P[2])*(Beta[14] + math.sin(P[3])*(math.cos(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) - math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - d4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.cos(P[3])*(math.sin(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) - math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))))) + math.cos(P[2])*(Beta[15] + r4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[3])*(Beta[24] + Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]) - 2*Beta[33]*math.cos(P[4])**2 - (math.sin(2*P[4])*Beta[32])/2 + (math.sin(2*P[4])*Beta[46])/2 + 2*Beta[44]*math.cos(P[4])**2*math.cos(P[5]) - 2*Beta[45]*math.cos(P[4])**2*math.sin(P[5]) - Beta[42]*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[4]) + 2*Beta[43]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4])*math.sin(P[5])) - math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))))), math.sin(P[1])*(math.sin(P[2])*(math.sin(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - math.cos(P[3])*(Beta[24] + math.cos(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) - r4*math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + r4*math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - d3*(math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + math.cos(P[2])*(Beta[26] + math.cos(P[4])*(Beta[46]*math.cos(P[4]) + math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) - d4*math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + d4*math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))))) + d2*(math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - math.cos(P[1])*(math.cos(P[2])*(math.sin(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - math.cos(P[3])*(Beta[24] + math.cos(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) - r4*math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + r4*math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - math.sin(P[2])*(Beta[26] + math.cos(P[4])*(Beta[46]*math.cos(P[4]) + math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) - d4*math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + d4*math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))))), math.cos(P[1])*(math.cos(P[2])*(math.cos(P[3])*(math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - math.sin(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) + r4*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - math.sin(P[2])*(math.sin(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) - math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])) + d4*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))))) - math.sin(P[1])*(math.sin(P[2])*(math.cos(P[3])*(math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - math.sin(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) + r4*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + math.cos(P[2])*(math.sin(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) - math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])) + d4*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + d3*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + d2*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))), math.cos(P[1])*(math.cos(P[2])*(math.cos(P[3])*(math.cos(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) + Beta[46]*math.sin(P[4])) - math.sin(P[3])*(Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])) - r4*math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + r4*math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) - math.sin(P[2])*(math.sin(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) - Beta[46]*math.cos(P[4]) - d4*math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + d4*math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])))) - d2*(math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) - math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) - math.sin(P[1])*(math.sin(P[2])*(math.cos(P[3])*(math.cos(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) + Beta[46]*math.sin(P[4])) - math.sin(P[3])*(Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])) - r4*math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + r4*math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) - d3*(math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) - math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) + math.cos(P[2])*(math.sin(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) - Beta[46]*math.cos(P[4]) - d4*math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + d4*math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))))],[math.cos(P[1])*(Beta[5] - d3*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[2])*(Beta[15] + r4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[3])*(Beta[24] + Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]) - 2*Beta[33]*math.cos(P[4])**2 - (math.sin(2*P[4])*Beta[32])/2 + (math.sin(2*P[4])*Beta[46])/2 + 2*Beta[44]*math.cos(P[4])**2*math.cos(P[5]) - 2*Beta[45]*math.cos(P[4])**2*math.sin(P[5]) - Beta[42]*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[4]) + 2*Beta[43]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4])*math.sin(P[5])) - math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) + math.cos(P[2])*(Beta[14] + math.sin(P[3])*(math.cos(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) - math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - d4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.cos(P[3])*(math.sin(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) - math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))))) - math.sin(P[1])*(Beta[6] + math.sin(P[2])*(Beta[14] + math.sin(P[3])*(math.cos(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) - math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - d4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.cos(P[3])*(math.sin(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) - math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))))) + math.cos(P[2])*(Beta[15] + r4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[3])*(Beta[24] + Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]) - 2*Beta[33]*math.cos(P[4])**2 - (math.sin(2*P[4])*Beta[32])/2 + (math.sin(2*P[4])*Beta[46])/2 + 2*Beta[44]*math.cos(P[4])**2*math.cos(P[5]) - 2*Beta[45]*math.cos(P[4])**2*math.sin(P[5]) - Beta[42]*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[4]) + 2*Beta[43]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4])*math.sin(P[5])) - math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))))), Beta[7] + Beta[16] - 2*r4*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - 2*d4*(math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - 2*d3*(math.sin(P[2])*(Beta[18] + Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - math.cos(P[2])*(Beta[17] - math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))))) + math.sin(P[3])*(math.sin(P[3])*(Beta[22] + math.sin(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) - math.cos(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) + math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) + math.cos(P[3])*(math.cos(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))), Beta[16] - 2*r4*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - 2*d4*(math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + math.sin(P[3])*(math.sin(P[3])*(Beta[22] + math.sin(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) - math.cos(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) + math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) + math.cos(P[3])*(math.cos(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) + d3*math.cos(P[2])*(Beta[17] - math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - d3*math.sin(P[2])*(Beta[18] + Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))), math.sin(P[3])*(Beta[24] + math.cos(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) + math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - r4*math.sin(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - r4*math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - d3*math.sin(P[2])*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))), math.sin(P[3])*(math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) + math.cos(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) - d4*(Beta[38]*math.sin(P[4]) - math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - d3*math.cos(P[2])*(Beta[38]*math.sin(P[4]) - math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - r4*math.cos(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - d3*math.cos(P[3])*math.sin(P[2])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))), math.sin(P[3])*(math.cos(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) + Beta[46]*math.sin(P[4])) + math.cos(P[3])*(Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])) - d3*math.sin(P[2])*(math.sin(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + math.cos(P[3])*math.cos(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) - d4*math.sin(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - r4*math.sin(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) - r4*math.cos(P[3])*math.cos(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - d3*math.cos(P[2])*math.sin(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))],[- math.cos(P[1])*(math.sin(P[2])*(Beta[15] + r4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[3])*(Beta[24] + Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]) - 2*Beta[33]*math.cos(P[4])**2 - (math.sin(2*P[4])*Beta[32])/2 + (math.sin(2*P[4])*Beta[46])/2 + 2*Beta[44]*math.cos(P[4])**2*math.cos(P[5]) - 2*Beta[45]*math.cos(P[4])**2*math.sin(P[5]) - Beta[42]*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[4]) + 2*Beta[43]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4])*math.sin(P[5])) - math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - math.cos(P[2])*(Beta[14] + math.sin(P[3])*(math.cos(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) - math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - d4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.cos(P[3])*(math.sin(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) - math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))))) - math.sin(P[1])*(math.sin(P[2])*(Beta[14] + math.sin(P[3])*(math.cos(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) - math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - d4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.cos(P[3])*(math.sin(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) - math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))))) + math.cos(P[2])*(Beta[15] + r4*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) - math.sin(P[3])*(Beta[24] + Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]) - 2*Beta[33]*math.cos(P[4])**2 - (math.sin(2*P[4])*Beta[32])/2 + (math.sin(2*P[4])*Beta[46])/2 + 2*Beta[44]*math.cos(P[4])**2*math.cos(P[5]) - 2*Beta[45]*math.cos(P[4])**2*math.sin(P[5]) - Beta[42]*math.cos(P[4])*math.cos(P[5])**2*math.sin(P[4]) + 2*Beta[43]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4])*math.sin(P[5])) - math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))))), Beta[16] - 2*r4*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - 2*d4*(math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + math.sin(P[3])*(math.sin(P[3])*(Beta[22] + math.sin(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) - math.cos(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) + math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) + math.cos(P[3])*(math.cos(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) + d3*math.cos(P[2])*(Beta[17] - math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - d3*math.sin(P[2])*(Beta[18] + Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))), Beta[16] + Beta[21] + math.sin(P[3])*(math.sin(P[3])*(Beta[22] + Beta[46] + Beta[32]*math.cos(P[4])**2 - Beta[46]*math.cos(P[4])**2 - math.sin(2*P[4])*Beta[33] + Beta[42]*math.cos(P[4])**2*math.cos(P[5])**2 - 2*Beta[43]*math.cos(P[4])**2*math.cos(P[5])*math.sin(P[5]) + 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) - 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5])) + math.cos(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))) - 2*r4*(Beta[38]*math.cos(P[4]) + Beta[37]*math.sin(P[4]) + Beta[47]*math.cos(P[5])*math.sin(P[4]) - Beta[48]*math.sin(P[4])*math.sin(P[5])) - 2*d4*(math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - math.cos(P[3])*(Beta[27] + Beta[37]*math.cos(P[4]) - Beta[38]*math.sin(P[4]) + Beta[47]*math.cos(P[4])*math.cos(P[5]) - Beta[48]*math.cos(P[4])*math.sin(P[5]))) + math.cos(P[3])*(math.cos(P[3])*(Beta[36] + Beta[42]*math.sin(P[5])**2 + 2*Beta[43]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[3])*(Beta[23] + math.cos(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])))), math.sin(P[3])*(Beta[24] + math.cos(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) + math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - r4*math.sin(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - r4*math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])), math.sin(P[3])*(math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) + math.cos(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) - d4*(Beta[38]*math.sin(P[4]) - math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - r4*math.cos(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))), math.sin(P[3])*(math.cos(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) + Beta[46]*math.sin(P[4])) + math.cos(P[3])*(Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])) - d4*math.sin(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - r4*math.sin(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) - r4*math.cos(P[3])*math.cos(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))],[ math.sin(P[1])*(math.sin(P[2])*(math.sin(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - math.cos(P[3])*(Beta[24] + math.cos(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) - r4*math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + r4*math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - d3*(math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + math.cos(P[2])*(Beta[26] + math.cos(P[4])*(Beta[46]*math.cos(P[4]) + math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) - d4*math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + d4*math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))))) + d2*(math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - math.cos(P[1])*(math.cos(P[2])*(math.sin(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - math.cos(P[3])*(Beta[24] + math.cos(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) - r4*math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + r4*math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - math.sin(P[2])*(Beta[26] + math.cos(P[4])*(Beta[46]*math.cos(P[4]) + math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])) + math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) - d4*math.sin(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + d4*math.cos(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))))), math.sin(P[3])*(Beta[24] + math.cos(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) + math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - r4*math.sin(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - r4*math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - d3*math.sin(P[2])*(math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) + math.sin(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))), math.sin(P[3])*(Beta[24] + math.cos(P[4])*(Beta[46]*math.sin(P[4]) - math.cos(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5]))) + math.sin(P[4])*(math.sin(P[4])*(Beta[33] - Beta[44]*math.cos(P[5]) + Beta[45]*math.sin(P[5])) - math.cos(P[4])*(Beta[32] + math.cos(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) - Beta[43]*math.cos(P[5])*math.sin(P[5])))) + math.cos(P[3])*(Beta[25] - math.sin(P[4])*(Beta[34] + math.cos(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) - Beta[43]*math.sin(P[5])**2) + math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - r4*math.sin(P[3])*(Beta[27] - Beta[38]*math.sin(P[4]) + math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - r4*math.cos(P[3])*(Beta[28] + Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])), Beta[26] + Beta[29] + Beta[46]*math.cos(P[4])**2 + math.sin(2*P[4])*Beta[33] + Beta[32]*math.sin(P[4])**2 + Beta[42]*math.cos(P[5])**2*math.sin(P[4])**2 - 2*Beta[43]*math.cos(P[5])*math.sin(P[4])**2*math.sin(P[5]) - 2*Beta[44]*math.cos(P[4])*math.cos(P[5])*math.sin(P[4]) + 2*Beta[45]*math.cos(P[4])*math.sin(P[4])*math.sin(P[5]), math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])) - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])), Beta[46]*math.cos(P[4]) - math.sin(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5]))],[math.cos(P[1])*(math.cos(P[2])*(math.cos(P[3])*(math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - math.sin(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) + r4*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) - math.sin(P[2])*(math.sin(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) - math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])) + d4*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))))) - math.sin(P[1])*(math.sin(P[2])*(math.cos(P[3])*(math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) - math.sin(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) + r4*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + math.cos(P[2])*(math.sin(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) - math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])) + d4*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + d3*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])))) + d2*math.sin(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))), math.sin(P[3])*(math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) + math.cos(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) - d4*(Beta[38]*math.sin(P[4]) - math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - d3*math.cos(P[2])*(Beta[38]*math.sin(P[4]) - math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - r4*math.cos(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - d3*math.cos(P[3])*math.sin(P[2])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))), math.sin(P[3])*(math.cos(P[4])*(Beta[34] + math.sin(P[5])*(Beta[42]*math.cos(P[5]) - Beta[43]*math.sin(P[5])) + Beta[43]*math.cos(P[5])**2) + math.sin(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5]))) + math.cos(P[3])*(Beta[36] + math.sin(P[5])*(Beta[43]*math.cos(P[5]) + Beta[42]*math.sin(P[5])) + Beta[43]*math.cos(P[5])*math.sin(P[5])) - d4*(Beta[38]*math.sin(P[4]) - math.cos(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))) - r4*math.cos(P[3])*(Beta[38]*math.cos(P[4]) + math.sin(P[4])*(Beta[37] + Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5]))), math.cos(P[4])*(Beta[45]*math.cos(P[5]) - Beta[35] + Beta[44]*math.sin(P[5])) - math.sin(P[4])*(Beta[34] + Beta[43]*(2*math.cos(P[5])**2 - 1) + Beta[42]*math.cos(P[5])*math.sin(P[5])), Beta[36] + Beta[39] + math.sin(2*P[5])*Beta[43] + Beta[42]*math.sin(P[5])**2, Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])],[math.cos(P[1])*(math.cos(P[2])*(math.cos(P[3])*(math.cos(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) + Beta[46]*math.sin(P[4])) - math.sin(P[3])*(Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])) - r4*math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + r4*math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) - math.sin(P[2])*(math.sin(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) - Beta[46]*math.cos(P[4]) - d4*math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + d4*math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])))) - d2*(math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) - math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) - math.sin(P[1])*(math.sin(P[2])*(math.cos(P[3])*(math.cos(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) + Beta[46]*math.sin(P[4])) - math.sin(P[3])*(Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])) - r4*math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + r4*math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) - d3*(math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) - math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) + math.cos(P[2])*(math.sin(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) - Beta[46]*math.cos(P[4]) - d4*math.cos(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + d4*math.cos(P[4])*math.sin(P[3])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])))), math.sin(P[3])*(math.cos(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) + Beta[46]*math.sin(P[4])) + math.cos(P[3])*(Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])) - d3*math.sin(P[2])*(math.sin(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) + math.cos(P[3])*math.cos(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5]))) - d4*math.sin(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - r4*math.sin(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) - r4*math.cos(P[3])*math.cos(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - d3*math.cos(P[2])*math.sin(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])), math.sin(P[3])*(math.cos(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])) + Beta[46]*math.sin(P[4])) + math.cos(P[3])*(Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5])) - d4*math.sin(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])) - r4*math.sin(P[3])*(Beta[47]*math.cos(P[5]) - Beta[48]*math.sin(P[5])) - r4*math.cos(P[3])*math.cos(P[4])*(Beta[48]*math.cos(P[5]) + Beta[47]*math.sin(P[5])), Beta[46]*math.cos(P[4]) - math.sin(P[4])*(Beta[44]*math.cos(P[5]) - Beta[45]*math.sin(P[5])), Beta[45]*math.cos(P[5]) + Beta[44]*math.sin(P[5]), Beta[46] + Beta[49] ]])
#-------------------------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------
    N=np.array([
        [ math.sin(P[1])*(math.sin(P[2])*(Beta[12]*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + Beta[13]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[3])*(math.sin(P[4])*(Beta[35]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[33]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[46]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[37]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[47]*(math.cos(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[48]*(math.sin(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[44]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[45]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - Beta[23]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - math.cos(P[4])*(Beta[34]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[32]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - math.cos(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[38]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[28]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[24]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - (Beta[25]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[23]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[26]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[24]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[25]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[22]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) - r4*(math.cos(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) + math.sin(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))))) - math.sin(P[3])*(Beta[36]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - math.cos(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[34]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[38]*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[27]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - (Beta[24]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[22]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[23]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - Beta[25]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[26]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[24]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[25]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[23]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) + (V[1] + V[2])*(Beta[13]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + Beta[15]*(V[1] + V[2])) + (V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(Beta[14]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - Beta[15]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[16]*(V[1] + V[2])) - 2*d3*Beta[18]*V[0]*V[1]*math.cos(P[1])) - V[1]*(Beta[5]*V[1] + Beta[3]*V[0]*math.cos(P[1]) - Beta[4]*V[0]*math.sin(P[1])) - d3*(Beta[18]*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) - Beta[17]*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) + math.sin(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))))) + math.cos(P[2])*(math.sin(P[4])*(Beta[34]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[32]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - math.cos(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[38]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (V[1] + V[2])*(Beta[12]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - Beta[13]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[14]*(V[1] + V[2])) - Beta[25]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[13]*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + Beta[26]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - d4*(math.cos(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) + math.sin(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))))) - (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[24]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[22]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[23]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (Beta[25]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[23]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))*(Beta[14]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - Beta[15]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[16]*(V[1] + V[2])) + Beta[27]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[28]*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(Beta[35]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[33]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[46]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[37]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[47]*(math.cos(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[48]*(math.sin(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[44]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[45]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[24]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + 2*d3*Beta[17]*V[0]*V[1]*math.cos(P[1])) + V[0]*math.cos(P[1])*(Beta[7]*V[1] + Beta[5]*V[0]*math.cos(P[1]) - Beta[6]*V[0]*math.sin(P[1])) + Beta[4]*V[0]*V[1]*math.sin(P[1])) - math.cos(P[1])*(math.cos(P[2])*(Beta[12]*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + Beta[13]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[3])*(math.sin(P[4])*(Beta[35]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[33]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[46]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[37]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[47]*(math.cos(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[48]*(math.sin(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[44]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[45]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - Beta[23]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - math.cos(P[4])*(Beta[34]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[32]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - math.cos(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[38]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[28]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[24]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - (Beta[25]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[23]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[26]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[24]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[25]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[22]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) - r4*(math.cos(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) + math.sin(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))))) - math.sin(P[3])*(Beta[36]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - math.cos(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[34]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[38]*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[27]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - (Beta[24]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[22]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[23]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - Beta[25]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[26]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[24]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[25]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[23]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) + (V[1] + V[2])*(Beta[13]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + Beta[15]*(V[1] + V[2])) + (V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(Beta[14]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - Beta[15]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[16]*(V[1] + V[2])) - 2*d3*Beta[18]*V[0]*V[1]*math.cos(P[1])) + V[1]*(Beta[6]*V[1] + Beta[4]*V[0]*math.cos(P[1])) - math.sin(P[2])*(math.sin(P[4])*(Beta[34]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[32]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - math.cos(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[38]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (V[1] + V[2])*(Beta[12]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - Beta[13]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[14]*(V[1] + V[2])) - Beta[25]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[13]*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + Beta[26]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - d4*(math.cos(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) + math.sin(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))))) - (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[24]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[22]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[23]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (Beta[25]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[23]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))*(Beta[14]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - Beta[15]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[16]*(V[1] + V[2])) + Beta[27]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[28]*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(Beta[35]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[33]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[46]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[37]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[47]*(math.cos(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[48]*(math.sin(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[44]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[45]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[24]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + 2*d3*Beta[17]*V[0]*V[1]*math.cos(P[1])) + V[0]*math.sin(P[1])*(Beta[7]*V[1] + Beta[5]*V[0]*math.cos(P[1]) - Beta[6]*V[0]*math.sin(P[1])) + Beta[4]*V[0]*V[1]*math.cos(P[1]) + Beta[3]*V[0]*V[1]*math.sin(P[1])) + d2*(Beta[18]*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) - Beta[17]*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) + math.sin(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))))) - 2*Beta[8]*V[0]*V[1]*math.cos(P[1]) + 2*Beta[9]*V[0]*V[1]*math.sin(P[1])) + Beta[1]*np.sign(V[0]) + Beta[2]*V[0]],

[d4*(math.cos(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + math.sin(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) - Beta[28]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[27]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) - d3*(math.cos(P[2])*(Beta[18]*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - math.cos(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - math.sin(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) + Beta[28]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[27]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[17]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[2])*(Beta[17]*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) - math.sin(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) + math.cos(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))))) + Beta[18]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[17]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1]))) - Beta[18]*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1]))) - Beta[14]*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) - Beta[15]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + (Beta[13]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + Beta[15]*(V[1] + V[2]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + math.sin(P[3])*(math.sin(P[4])*(Beta[35]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[33]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[46]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[37]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[47]*(math.cos(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[48]*(math.sin(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[44]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[45]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - Beta[23]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - math.cos(P[4])*(Beta[34]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[32]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - math.cos(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[38]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[28]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[24]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - (Beta[25]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[23]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[26]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[24]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[25]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[22]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) + Beta[8]*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1])) + Beta[9]*(g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - math.cos(P[3])*(Beta[36]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - math.cos(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[34]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[38]*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[27]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - (Beta[24]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[22]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[23]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - Beta[25]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[26]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[24]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[25]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[23]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) + r4*(math.sin(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) - math.cos(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))))) + (V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(Beta[12]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - Beta[13]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[14]*(V[1] + V[2])) + V[0]*math.sin(P[1])*(Beta[5]*V[1] + Beta[3]*V[0]*math.cos(P[1]) - Beta[4]*V[0]*math.sin(P[1])) + V[0]*math.cos(P[1])*(Beta[6]*V[1] + Beta[4]*V[0]*math.cos(P[1])) - Beta[6]*V[0]*V[1]*math.cos(P[1]) - Beta[5]*V[0]*V[1]*math.sin(P[1]) + Beta[10]*np.sign(V[1]) + Beta[11]*V[1] ],

        [d4*(math.cos(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + math.sin(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) - Beta[28]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[27]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) + Beta[17]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1]))) - Beta[18]*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1]))) - Beta[14]*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) - Beta[15]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + (Beta[13]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + Beta[15]*(V[1] + V[2]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + math.sin(P[3])*(math.sin(P[4])*(Beta[35]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[33]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[46]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[37]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[47]*(math.cos(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[48]*(math.sin(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[44]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[45]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - Beta[23]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - math.cos(P[4])*(Beta[34]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[32]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - math.cos(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[38]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[28]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[24]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - (Beta[25]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[23]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[26]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[24]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[25]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[22]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) - math.cos(P[3])*(Beta[36]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - math.cos(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[34]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[38]*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[27]*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - (Beta[24]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[22]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[23]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - Beta[25]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[26]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[24]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[25]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[23]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])))) + r4*(math.sin(P[3])*(Beta[38]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[37]*((math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[28]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[27]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + math.cos(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))) - math.cos(P[3])*(math.sin(P[4])*(Beta[37]*((math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[38]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[47]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[48]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[27]*((V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2) - Beta[28]*((math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) + V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - math.cos(P[4])*(Beta[38]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[37]*((V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))**2 + (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - math.cos(P[5])*(Beta[47]*((math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) + Beta[48]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[48]*((math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2 + (V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))**2) - Beta[47]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))))))) + (V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(Beta[12]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) - Beta[13]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[14]*(V[1] + V[2])) + Beta[20]*np.sign(V[2]) + Beta[21]*V[2]],

        [math.sin(P[4])*(Beta[34]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[32]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - math.cos(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[38]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[25]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[26]*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) - (math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[24]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[22]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[23]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (Beta[25]*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + Beta[23]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[27]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[28]*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(Beta[35]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[33]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[46]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + (math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[34]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[36]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[35]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[37]*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[47]*(math.cos(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[48]*(math.sin(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[44]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[45]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) + Beta[24]*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + Beta[30]*np.sign(V[3]) + Beta[31]*V[3]],
        [math.cos(P[5])*(Beta[45]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[47]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[43]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - Beta[36]*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - Beta[34]*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[35]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - Beta[37]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[38]*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[5])*(Beta[44]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + Beta[48]*(math.sin(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[45]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[44]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[46]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[43]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))) - (math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[32]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[34]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) + Beta[33]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - (Beta[35]*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - Beta[33]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[40]*np.sign(V[4]) + Beta[41]*V[4]],
        [ Beta[46]*(math.sin(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[4]*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - (math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))*(Beta[43]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[42]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[44]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + (Beta[43]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - Beta[45]*(V[5] + math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))))*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + Beta[47]*(math.cos(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[48]*(math.sin(P[5])*(math.cos(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) - math.sin(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(math.cos(P[4])*(math.sin(P[3])*(d4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2])) + r4*((V[1] + V[2])*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1])) + 2*d3*V[0]*V[1]*math.cos(P[1])) + math.cos(P[3])*(math.sin(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) - math.cos(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) - d4*((V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))**2 + (V[1] + V[2])**2) + r4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.sin(P[4])*(math.cos(P[2])*(g*math.sin(P[1]) + d2*V[0]**2*math.cos(P[1]) - d3*V[0]**2*math.cos(P[1])*math.sin(P[1])) + math.sin(P[2])*(d3*(V[0]**2*math.sin(P[1])**2 + V[1]**2) + g*math.cos(P[1]) - d2*V[0]**2*math.sin(P[1])) + r4*((V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))**2 + (V[1] + V[2])**2) - d4*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1]))*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) - Beta[44]*(math.cos(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) + math.sin(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) - V[5]*(math.sin(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) + math.cos(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[45]*(math.sin(P[5])*(V[4]*(math.cos(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + math.sin(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.cos(P[4])*(V[3]*(math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + math.sin(P[4])*(V[2]*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])) + V[0]*V[1]*math.cos(P[1])*math.cos(P[2]) - V[0]*V[1]*math.sin(P[1])*math.sin(P[2]))) - math.cos(P[5])*(V[3]*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))) - math.sin(P[3])*(V[2]*(V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) + V[0]*V[1]*math.cos(P[1])*math.sin(P[2]) + V[0]*V[1]*math.cos(P[2])*math.sin(P[1]))) + V[5]*(math.cos(P[5])*(math.sin(P[4])*(V[3] + V[0]*math.cos(P[1])*math.sin(P[2]) + V[0]*math.cos(P[2])*math.sin(P[1])) - math.cos(P[4])*(math.sin(P[3])*(V[1] + V[2]) + math.cos(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2])))) - math.sin(P[5])*(V[4] + math.cos(P[3])*(V[1] + V[2]) - math.sin(P[3])*(V[0]*math.cos(P[1])*math.cos(P[2]) - V[0]*math.sin(P[1])*math.sin(P[2]))))) + Beta[50]*np.sign(V[5]) + Beta[51]*V[5] ]
  ])

    return M,N

